<style lang="less">
  @import '../../../css/app.less'; // .displayCenter() 是使用display水平垂直居中
  .report-layout {
    padding-bottom: 50rpx;
    height: fit-content;
  }
  .button-box {
    width: 90%;
    margin: auto;
    margin-top: 50rpx;
    .displayCenter(@justify-content: space-between);
    .back-button {
      background: #2a363b;
      .standard-button;
      .displayCenter();
      &:active {
        background: #495357;
      }
    }
    .save-data-button {
      background: #30887d;
      .standard-button;
      .displayCenter();
      &:active {
        background: #3EACA8;
      }
    }
  }
  .standard-button {
    min-width: 46.5%;
    height: 90rpx;
    border-radius: 10rpx;
    color: white;
    font-size: @secondTitle;
    font-weight: bold;
  }
  .popup-layout {
    width: 400rpx;
    height: 175rpx;
    .popup-font {
      font-size: @text;
      color: @textColor;
      padding: 20rpx;
    }
    .button-layout {
      position: absolute;
      bottom: 5px;
      left: 5px;
      right: 5px;
      display: flex;
    }
    .van-button--danger,
    .van-button--primary {
      width: 100%;
    }
  }
</style>

<template>
  <view class="report-layout">
    <gameInfoForm :red.sync="red" :green.sync="green"> </gameInfoForm>
    <view wx:if="{{showCharts}}">
      <pieCharts></pieCharts>
      <barGraph></barGraph>
    </view>
    <view class="button-box">
      <view class="back-button" style="width:{{showCharts?'46.5%':'100%'}}" @tap.stop="back()">返回</view>
      <view style="width:40rpx;" wx:if="{{showCharts}}"></view>
      <view class="save-data-button" wx:if="{{showCharts}}" @tap.stop="clickSaveData()">保存数据</view>
    </view>
    <!-- 遮罩层 -->
    <van-popup show="{{ showPopup }}" bind:close="onClose" custom-style="background:#f3f3f3;border-radius: 3px;">
      <view class="popup-layout">
        <view class="popup-font">您是哪一方？</view>
        <view class="button-layout">
          <van-button class="van-button--danger" @tap.stop="saveTo('red')" type="danger">红方</van-button>
          <view style="width:20rpx"></view>
          <van-button class="van-button--primary" @tap.stop="saveTo('green')" type="primary">绿方</van-button>
        </view>
      </view>
    </van-popup>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import gameInfoForm from './components/gameInfoForm'
  import pieCharts from './components/pieChart'
  import barGraph from './components/barGraph'
  export default class gameReport extends wepy.page {
    config = {
      navigationBarTitleText: '赛后报表',
      usingComponents: {
        'van-button': '/components/vant-weapp/button/index',
        'van-popup': '/components/vant-weapp/popup/index'
      }
    }
    components = {
      gameInfoForm,
      pieCharts,
      barGraph
    }
    data = {
      // 图表显示情况
      showCharts: true,
      // 保存情况
      saved: false,
      // 从裁判器来的参数
      red: {},
      green: {},
      // 显示遮罩层
      showPopup: false,
      // 选择哪一方保存
      playerInfo: {}
    }
    methods = {
      // 返回裁判器页面
      back() {
        wepy.switchTab({
          url: '../score'
        })
      },
      // 点击保存按钮
      clickSaveData() {
        if (this.saved) {
          wepy.showToast({
            title: '已经保存过了~',
            icon: 'none',
            duration: 1000
          })
          return
        }
        this.showPopup = true
        this.$broadcast('isShowCanvas')
      },
      // 选择保存哪一方  red/green
      saveTo(player) {
        let that = this
        // 加载提示
        this.$parent.showLoadingSuccess()
        // 设置缓存
        wepy.setStorage({
          key: 'matchHistroy',
          data: {
            red: that.red,
            green: that.green
          }
        })
        // 插入用户比赛记录
        this.insertMatchRecord()
        // 用户生涯信息
        if (that.$parent.globalData.userCareer.code === '0') {
          this.insertCareerInfo(player)
        } else {
          this.updateCareerInfo(player)
        }
        this.showPopup = false
        this.saved = true
      },
      // 弹出层关闭
      onClose() {
        this.showPopup = false
        this.$broadcast('isShowCanvas')
      }
    }
    computed = {}
    events = {}
    onLoad(params, data) {
      // 预传参
      let redWin = 'N'
      let greenWin = 'N'
      if (data.preload.win === 'red') {
        redWin = 'Y'
      } else {
        greenWin = 'Y'
      }
      this.red = {
        ...data.preload.red,
        redWin: redWin
      }
      this.green = {
        ...data.preload.green,
        greenWin: greenWin
      }
      // 双方没有分数 不显示图表
      if (this.red.redScore === 0 && this.green.greenScore === 0) {
        this.showCharts = false
      }
      // 触发子组件画图方法
      this.$broadcast('drawCanvas', this.red, this.green, data.preload.winScore)
    }
    // 插入用户比赛记录
    insertMatchRecord() {
      const that = this
      const GLOBAL = that.$parent.globalData
      // 数组解构
      let isVictory
      this.red.redWin === 'Y' ? isVictory = 0 : isVictory = 1
      let RECORD = {
        redName: this.red.name,
        redAttack: this.red.attack,
        redDefend: this.red.defense,
        redCounterattack: this.red.counterattack,
        isVictory: isVictory,
        greenName: this.green.name,
        greenAttack: this.green.attack,
        greenDefend: this.green.defense,
        greenCounterattack: this.green.counterattack
      }
      // 插入比赛记录
      wepy.request({
        url: GLOBAL.URL + 'matchrecord/insert',
        method: 'POST',
        data: {
          openId: GLOBAL.openId,
          ...RECORD
        },
        success(res) {
          // 重新请求比赛记录
          if (res.data.code === '1') {
            wepy.request({
              url: GLOBAL.URL + 'matchrecord/get',
              data: {
                openId: GLOBAL.openId
              },
              success(res) {
                if (res.data.code === '1') {
                  GLOBAL.userRecord = res.data.data
                  GLOBAL.recordCode = '1'
                }
              }
            })
          }
        }
      })
      // GLOBAL.userRecord.push(RECORD)
      GLOBAL.recordCode = '1'
    }
    // 插入用户生涯信息
    insertCareerInfo(player) {
      const that = this
      this.judge(player)
      const GLOBAL = this.$parent.globalData
      wepy.request({
        url: GLOBAL.URL + 'career/insert',
        method: 'POST',
        data: {
          openId: GLOBAL.openId,
          ...that.playerInfo
        }
      })
      GLOBAL.userCareer = {
        code: '1',
        ...this.playerInfo
      }
      // this.setUserCareerStorage()
    }
    // 更新用户生涯信息
    updateCareerInfo(player) {
      const that = this
      this.judge(player)
      const GLOBAL = this.$parent.globalData
      wepy.request({
        url: GLOBAL.URL + 'career/update',
        method: 'POST',
        data: {
          openId: GLOBAL.openId,
          ...that.playerInfo
        }
      })
      GLOBAL.userCareer = {
        code: '1',
        ...this.playerInfo
      }
      // this.setUserCareerStorage()
    }
    // 判断是哪一方  并整理数据
    judge(player) {
      const GLOBAL = this.$parent.globalData
      const RED = this.red
      const GREEN = this.green
      // 0红win，1绿win
      let whoVictory
      let victory = 0
      this.red.redWin === 'Y' ? whoVictory = 0 : whoVictory = 1
      if (player === 'red') {
        this.playerInfo.attack = RED.attack + GLOBAL.userCareer.attack
        this.playerInfo.defend = RED.defense + GLOBAL.userCareer.defend
        this.playerInfo.counterattack = RED.counterattack + GLOBAL.userCareer.counterattack
        if (whoVictory === 0) victory = 1
      } else {
        this.playerInfo.attack = GREEN.attack + GLOBAL.userCareer.attack
        this.playerInfo.defend = GREEN.defense + GLOBAL.userCareer.defend
        this.playerInfo.counterattack = GREEN.counterattack + GLOBAL.userCareer.counterattack
        if (whoVictory === 1) victory = 1
      }
      this.playerInfo.victory = GLOBAL.userCareer.victory + victory
      this.playerInfo.total = GLOBAL.userCareer.total + 1
    }
    // // 设置用户生涯缓存
    // setUserCareerStorage() {
    //   const that = this
    //   wepy.setStorage({
    //     key: 'userCareer',
    //     data: {
    //       code: '1',
    //       ...that.playerInfo
    //     }
    //   })
    // }
  }
</script>
